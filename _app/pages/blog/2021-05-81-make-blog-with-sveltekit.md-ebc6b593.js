import{S as a,i as t,s,A as n,k as e,j as o,J as p,d as l,n as r,m as c,f as i,o as h,p as u,v as d,r as k,w as g,q as f,D as m,e as v,t as y,c as b,a as w,g as E,b as x,G as P,H as j}from"../../chunks/vendor-ab208dc6.js";import{B as A}from"../../chunks/BlogLayout-c9b1be15.js";import"../../chunks/Bio-9303181a.js";function D(a){let t,s,n,o,p,c,h,u,g,f,A,D,C,O,T,I,H,_,$,M,S,L,R,q,B,W,Y,N,G,F,z,J,K,Q,U,V,X,Z,aa,ta,sa,na,ea,oa,pa,la,ra,ca,ia,ha,ua,da,ka,ga,fa,ma,va,ya,ba,wa,Ea,xa,Pa,ja,Aa,Da,Ca,Oa,Ta,Ia,Ha,_a,$a,Ma,Sa,La,Ra,qa,Ba,Wa,Ya,Na,Ga,Fa,za,Ja,Ka,Qa,Ua,Va,Xa,Za,at,tt,st,nt,et,ot,pt,lt,rt,ct,it,ht,ut,dt,kt,gt,ft,mt,vt,yt,bt,wt,Et,xt,Pt,jt,At,Dt,Ct,Ot,Tt,It,Ht,_t,$t,Mt,St,Lt,Rt,qt,Bt,Wt,Yt,Nt,Gt,Ft,zt,Jt,Kt,Qt,Ut,Vt,Xt,Zt,as,ts,ss,ns,es,os,ps,ls,rs,cs,is,hs,us,ds,ks,gs,fs,ms,vs,ys,bs,ws,Es,xs,Ps,js,As,Ds,Cs,Os,Ts,Is,Hs,_s,$s,Ms,Ss,Ls,Rs,qs,Bs,Ws,Ys,Ns,Gs,Fs,zs,Js,Ks,Qs,Us,Vs,Xs,Zs,an,tn,sn,nn,en,on,pn,ln,rn,cn,hn,un,dn,kn,gn,fn,mn,vn,yn,bn,wn,En,xn,Pn,jn,An,Dn,Cn,On,Tn,In,Hn,_n,$n,Mn,Sn,Ln,Rn,qn,Bn,Wn,Yn,Nn,Gn,Fn,zn,Jn,Kn,Qn,Un,Vn,Xn,Zn,ae,te,se,ne,ee,oe,pe,le,re,ce,ie,he,ue,de,ke,ge,fe,me,ve,ye,be,we,Ee,xe,Pe,je,Ae,De,Ce,Oe,Te,Ie,He,_e,$e,Me,Se,Le,Re,qe,Be,We,Ye,Ne,Ge,Fe,ze,Je,Ke,Qe,Ue,Ve,Xe,Ze;const ao=a[0].default,to=m(ao,a,a[1],null);return{c(){t=v("p"),s=y("After reading this post, you should be able to make a blog using svelte kit, and host it on github or any other hosting service of your choice."),n=e(),o=v("p"),p=y("I recently moved by teeny tiny unmaintained blog from gatsby to svelte kit. Removing gatsby removed a lot of complexity which comes with gatsby. I no longer understood what was going on under the hood and was too scared to upgrade gatsby."),c=e(),h=v("p"),u=y("Switching to svelte-kit was relatively straight forward except for a few quirks. The quirks mainly had to do with rendering markdown as html."),g=e(),f=v("p"),A=y("If you don’t want to read the whole article, you can checkout the final code "),D=v("a"),C=y("here"),O=y("."),T=e(),I=v("h3"),H=v("a"),_=y("Step 1 - Setup svelte kit template"),$=e(),M=v("p"),S=y("You can get started with svelte kit template using their "),L=v("code"),R=y("npm init"),q=y(" command -"),B=e(),W=v("pre"),Y=e(),N=v("h3"),G=v("a"),F=y("Step 2 - Add mdsvex to convert markdown files to html"),z=e(),J=v("pre"),K=e(),Q=v("p"),U=v("code"),V=y("svelte-add mdsvex"),X=y(" will make necessary changes to "),Z=v("code"),aa=y("package.json"),ta=y(" to add the required dependencies, add a mdsvex config file and change the "),sa=v("code"),na=y("svelte.config"),ea=y(" file to add mdsvex as a preprocessor."),oa=e(),pa=v("p"),la=y("You will have to restart the dev server for mdsvex preprocessor to kick in."),ra=e(),ca=v("p"),ia=y("Try adding a markdown file in your routes folder and going to the route pointed by the markdown file name."),ha=e(),ua=v("h3"),da=v("a"),ka=y("Step 3 - Show a list of all blog posts on home page"),ga=e(),fa=v("p"),ma=y("We want to collect all our markdown files and show the list of blog posts on the home page or on some other path, so that our users can browse the super amazing content we publish."),va=e(),ya=v("p"),ba=y("We will use "),wa=v("code"),Ea=y("import.meta.glob"),xa=y(" to get the metadata for each of the markdown files. I have done that in my "),Pa=v("code"),ja=y("routes/index.svelte"),Aa=y(" file."),Da=e(),Ca=v("pre"),Oa=e(),Ta=v("p"),Ia=y("Now, posts should have the list of posts with their metadata, as defined by you at the top of each post. E.g. If you have this at the top of a post -"),Ha=e(),_a=v("pre"),$a=e(),Ma=v("p"),Sa=y("That post’s metadata would be an object and look like this"),La=e(),Ra=v("pre"),qa=e(),Ba=v("p"),Wa=y("You can then render whatever metadata you want to."),Ya=e(),Na=v("pre"),Ga=e(),Fa=v("h3"),za=v("a"),Ja=y("Step 4 - Add a layout component for the blog"),Ka=e(),Qa=v("p"),Ua=y("If you have a header which you want to show for each page in the blog/site, you can add that as a layout component. For e.g. adding "),Va=v("code"),Xa=y("routes/__layout.svelte"),Za=y(" file, with a "),to&&to.c(),at=y(" component in it, will wrap every route content inside this layout component. Example layout component -"),tt=e(),st=v("pre"),nt=e(),et=v("p"),ot=y("You can read more about svelte kit layout components here - "),pt=v("a"),lt=y("https://kit.svelte.dev/docs#layouts"),rt=e(),ct=v("h3"),it=v("a"),ht=y("Step 5 - Add a layout component for individual blog posts"),ut=e(),dt=v("p"),kt=y("This was trickier than i thought. At least my first attempt. And when i found the solution, it was not as tricky as i thought. At least not as tricky as trying to read this paragraph."),gt=e(),ft=v("p"),mt=y("I thought i would utilize svelte-kit’s layout capability, with "),vt=v("code"),yt=y("__layout.svelte"),bt=y(" file in the blog folder. But I wanted the layout component for blog post to take care of the post title. My first attempt was to use the "),wt=v("code"),Et=y("load"),xt=y(" function provided by "),Pt=v("code"),jt=y("svelte-kit"),At=y(" and then fetching the metadata for the post by importing that file. That worked during development but didn’t work with static adapter. Since i was importing file dynamically, it needed a server."),Dt=e(),Ct=v("p"),Ot=y("Then i found out about layouts in mdsvex. All i had to do was add a svelte component somewhere, say lib folder, and then point mdsvex to that file. That is done in "),Tt=v("code"),It=y("mdsvex.config.cjs"),Ht=e(),_t=v("pre"),$t=e(),Mt=v("p"),St=y("And the BlogLayout.svelte component looked like this"),Lt=e(),Rt=v("pre"),qt=e(),Bt=v("p"),Wt=y("Now all my blog posts had a title and date at the top. The layout component also enabled styling the container for each post, if i wanted to."),Yt=e(),Nt=v("p"),Gt=y("More about "),Ft=v("code"),zt=y("mdsvex"),Jt=y(" layout components here - "),Kt=v("a"),Qt=y("https://mdsvex.pngwn.io/docs#layouts"),Ut=e(),Vt=v("h3"),Xt=v("a"),Zt=y("Step 6 - Hosting the blog on github"),as=e(),ts=v("p"),ss=y("Github allows static site hosting in 2 ways - either as a user site or as a project site. You can read more about github hosting "),ns=v("a"),es=y("here"),os=y(". I have my site hosted as a user site. Which meant i had to push the output of the static adapter to my master branch. But what is this static adapter thingy?"),ps=e(),ls=v("p"),rs=y("svelte kit provides various adapters to convert your site in ways which are suited for your deployment environemnt. In our case, we want the site to be hosted on github (or netlify etc.) as a static site. No server. Just html pages with some css and js. For that, we use the "),cs=v("a"),is=y("svelte-kit static adapter"),hs=e(),us=v("h4"),ds=v("a"),ks=y("Install svelte static adapter"),gs=e(),fs=v("p"),ms=y("We can install the static adapter from npm."),vs=e(),ys=v("pre"),bs=e(),ws=v("p"),Es=y("We then have to change the svelte config to tell it to use static adapter -"),xs=e(),Ps=v("pre"),js=e(),As=v("h4"),Ds=v("a"),Cs=y("Generate content to host as static site"),Os=e(),Ts=v("p"),Is=y("Once we have setup the static adapter, calling "),Hs=v("code"),_s=y("npm run build"),$s=y(" on the terminal should generate the build folder."),Ms=e(),Ss=v("pre"),Ls=e(),Rs=v("p"),qs=y("We can test the build by going inside the build folder and using "),Bs=v("code"),Ws=y("serve"),Ys=y(" or any other server to serve the files. "),Ns=v("code"),Gs=y("serve"),Fs=y(" starts a server on "),zs=v("code"),Js=y("localhost:5000"),Ks=y(" by default."),Qs=e(),Us=v("h4"),Vs=v("a"),Xs=y("Install gh-pages and deploy site"),Zs=e(),an=v("p"),tn=y("Now that we have the built files, we have to push them to the master branch, for user site, or to the "),sn=v("code"),nn=y("gh-pages"),en=y(" branch for a project site. Once we update the branch and push to github, github will then deploy the files for us and we should be able to see our site come alive."),on=e(),pn=v("p"),ln=v("code"),rn=y("gh-pages"),cn=y(" is a handy tool to push the contents of any folder to any other branch in your repository. Installing "),hn=v("code"),un=y("gh-pages"),dn=y(" is straight forward with npm."),kn=e(),gn=v("pre"),fn=e(),mn=v("p"),vn=y("I then added an npm script to make deployment easy -"),yn=e(),bn=v("pre"),wn=e(),En=v("p"),xn=y("If you are deploying a project site, you can remove the "),Pn=v("code"),jn=y("-b master"),An=y(" flag from gh-pages command. "),Dn=v("code"),Cn=y("gh-pages"),On=y(" pushes to "),Tn=v("code"),In=y("gh-pages"),Hn=y(" branch by default."),_n=e(),$n=v("p"),Mn=v("code"),Sn=y("gh-pages"),Ln=y(" will also push the branch to remote. So if all goes well, you should be able to see your site live after some time."),Rn=e(),qn=v("h4"),Bn=v("a"),Wn=y("Fixing _apps/"),Yn=v("em"),Nn=y(".js and _apps/"),Gn=y(".css paths returning 404 on the deployed site"),Fn=e(),zn=v("p"),Jn=y("After you deploy your site by pushing the github branch, you will probably see your site looking a little different to what it looks on your development environment. That’s because some of the js and css is missing. If you open the devtools and then the network tab, a number of js and css files might be returning 404. All of those would be serving files from inside the "),Kn=v("code"),Qn=y("__app"),Un=y(" folder. That is because github does not deploy the "),Vn=v("code"),Xn=y("__app"),Zn=y(" folder. All folders starting with an "),ae=v("code"),te=y("_"),se=y(" are to be ignored for sites built with "),ne=v("a"),ee=y("jekyll"),oe=y(". Read more about it "),pe=v("a"),le=y("here"),re=y("."),ce=e(),ie=v("p"),he=y("To get around the problem, we have to add an empty file named "),ue=v("code"),de=y(".nojekyll"),ke=y(" to our static folder. "),ge=v("code"),fe=y("npm run build"),me=y(" will then copy that file to the "),ve=v("code"),ye=y("build"),be=y(" folder and "),we=v("code"),Ee=y("gh-pages"),xe=y(" will then push that file to the required github branch."),Pe=e(),je=v("p"),Ae=y("You might find that it still doesn’t work. Mainly because "),De=v("code"),Ce=y("gh-pages"),Oe=y(" is not pushing the "),Te=v("code"),Ie=y(".nojekyll"),He=y(" file to the github branch, because "),_e=v("code"),$e=y("gh-pages"),Me=y(" tool ignores all files starting with a "),Se=v("code"),Le=y("."),Re=y(" (dot). We can tell the "),qe=v("code"),Be=y("gh-pages"),We=y(" tool to also push dot files from the build folder by using the "),Ye=v("code"),Ne=y("-t"),Ge=y(" flag. If you copied the deploy command from above, it’s already there."),Fe=e(),ze=v("p"),Je=y("That is it! Go ahead and add a lot of blog posts as markdown files and deploy to your site. I am kidding. Building the blog with svelte kit was fun though."),Ke=e(),Qe=v("p"),Ue=y("Link to final code - "),Ve=v("a"),Xe=y("https://github.com/mukeshsoni/mukeshsoni.github.io/tree/svelte"),this.h()},l(a){t=b(a,"P",{});var e=w(t);s=E(e,"After reading this post, you should be able to make a blog using svelte kit, and host it on github or any other hosting service of your choice."),e.forEach(l),n=r(a),o=b(a,"P",{});var i=w(o);p=E(i,"I recently moved by teeny tiny unmaintained blog from gatsby to svelte kit. Removing gatsby removed a lot of complexity which comes with gatsby. I no longer understood what was going on under the hood and was too scared to upgrade gatsby."),i.forEach(l),c=r(a),h=b(a,"P",{});var d=w(h);u=E(d,"Switching to svelte-kit was relatively straight forward except for a few quirks. The quirks mainly had to do with rendering markdown as html."),d.forEach(l),g=r(a),f=b(a,"P",{});var k=w(f);A=E(k,"If you don’t want to read the whole article, you can checkout the final code "),D=b(k,"A",{href:!0,rel:!0});var m=w(D);C=E(m,"here"),m.forEach(l),O=E(k,"."),k.forEach(l),T=r(a),I=b(a,"H3",{id:!0});var v=w(I);H=b(v,"A",{href:!0});var y=w(H);_=E(y,"Step 1 - Setup svelte kit template"),y.forEach(l),v.forEach(l),$=r(a),M=b(a,"P",{});var x=w(M);S=E(x,"You can get started with svelte kit template using their "),L=b(x,"CODE",{});var P=w(L);R=E(P,"npm init"),P.forEach(l),q=E(x," command -"),x.forEach(l),B=r(a),W=b(a,"PRE",{class:!0}),w(W).forEach(l),Y=r(a),N=b(a,"H3",{id:!0});var j=w(N);G=b(j,"A",{href:!0});var Ze=w(G);F=E(Ze,"Step 2 - Add mdsvex to convert markdown files to html"),Ze.forEach(l),j.forEach(l),z=r(a),J=b(a,"PRE",{class:!0}),w(J).forEach(l),K=r(a),Q=b(a,"P",{});var ao=w(Q);U=b(ao,"CODE",{});var so=w(U);V=E(so,"svelte-add mdsvex"),so.forEach(l),X=E(ao," will make necessary changes to "),Z=b(ao,"CODE",{});var no=w(Z);aa=E(no,"package.json"),no.forEach(l),ta=E(ao," to add the required dependencies, add a mdsvex config file and change the "),sa=b(ao,"CODE",{});var eo=w(sa);na=E(eo,"svelte.config"),eo.forEach(l),ea=E(ao," file to add mdsvex as a preprocessor."),ao.forEach(l),oa=r(a),pa=b(a,"P",{});var oo=w(pa);la=E(oo,"You will have to restart the dev server for mdsvex preprocessor to kick in."),oo.forEach(l),ra=r(a),ca=b(a,"P",{});var po=w(ca);ia=E(po,"Try adding a markdown file in your routes folder and going to the route pointed by the markdown file name."),po.forEach(l),ha=r(a),ua=b(a,"H3",{id:!0});var lo=w(ua);da=b(lo,"A",{href:!0});var ro=w(da);ka=E(ro,"Step 3 - Show a list of all blog posts on home page"),ro.forEach(l),lo.forEach(l),ga=r(a),fa=b(a,"P",{});var co=w(fa);ma=E(co,"We want to collect all our markdown files and show the list of blog posts on the home page or on some other path, so that our users can browse the super amazing content we publish."),co.forEach(l),va=r(a),ya=b(a,"P",{});var io=w(ya);ba=E(io,"We will use "),wa=b(io,"CODE",{});var ho=w(wa);Ea=E(ho,"import.meta.glob"),ho.forEach(l),xa=E(io," to get the metadata for each of the markdown files. I have done that in my "),Pa=b(io,"CODE",{});var uo=w(Pa);ja=E(uo,"routes/index.svelte"),uo.forEach(l),Aa=E(io," file."),io.forEach(l),Da=r(a),Ca=b(a,"PRE",{class:!0}),w(Ca).forEach(l),Oa=r(a),Ta=b(a,"P",{});var ko=w(Ta);Ia=E(ko,"Now, posts should have the list of posts with their metadata, as defined by you at the top of each post. E.g. If you have this at the top of a post -"),ko.forEach(l),Ha=r(a),_a=b(a,"PRE",{class:!0}),w(_a).forEach(l),$a=r(a),Ma=b(a,"P",{});var go=w(Ma);Sa=E(go,"That post’s metadata would be an object and look like this"),go.forEach(l),La=r(a),Ra=b(a,"PRE",{class:!0}),w(Ra).forEach(l),qa=r(a),Ba=b(a,"P",{});var fo=w(Ba);Wa=E(fo,"You can then render whatever metadata you want to."),fo.forEach(l),Ya=r(a),Na=b(a,"PRE",{class:!0}),w(Na).forEach(l),Ga=r(a),Fa=b(a,"H3",{id:!0});var mo=w(Fa);za=b(mo,"A",{href:!0});var vo=w(za);Ja=E(vo,"Step 4 - Add a layout component for the blog"),vo.forEach(l),mo.forEach(l),Ka=r(a),Qa=b(a,"P",{});var yo=w(Qa);Ua=E(yo,"If you have a header which you want to show for each page in the blog/site, you can add that as a layout component. For e.g. adding "),Va=b(yo,"CODE",{});var bo=w(Va);Xa=E(bo,"routes/__layout.svelte"),bo.forEach(l),Za=E(yo," file, with a "),to&&to.l(yo),at=E(yo," component in it, will wrap every route content inside this layout component. Example layout component -"),yo.forEach(l),tt=r(a),st=b(a,"PRE",{class:!0}),w(st).forEach(l),nt=r(a),et=b(a,"P",{});var wo=w(et);ot=E(wo,"You can read more about svelte kit layout components here - "),pt=b(wo,"A",{href:!0,rel:!0});var Eo=w(pt);lt=E(Eo,"https://kit.svelte.dev/docs#layouts"),Eo.forEach(l),wo.forEach(l),rt=r(a),ct=b(a,"H3",{id:!0});var xo=w(ct);it=b(xo,"A",{href:!0});var Po=w(it);ht=E(Po,"Step 5 - Add a layout component for individual blog posts"),Po.forEach(l),xo.forEach(l),ut=r(a),dt=b(a,"P",{});var jo=w(dt);kt=E(jo,"This was trickier than i thought. At least my first attempt. And when i found the solution, it was not as tricky as i thought. At least not as tricky as trying to read this paragraph."),jo.forEach(l),gt=r(a),ft=b(a,"P",{});var Ao=w(ft);mt=E(Ao,"I thought i would utilize svelte-kit’s layout capability, with "),vt=b(Ao,"CODE",{});var Do=w(vt);yt=E(Do,"__layout.svelte"),Do.forEach(l),bt=E(Ao," file in the blog folder. But I wanted the layout component for blog post to take care of the post title. My first attempt was to use the "),wt=b(Ao,"CODE",{});var Co=w(wt);Et=E(Co,"load"),Co.forEach(l),xt=E(Ao," function provided by "),Pt=b(Ao,"CODE",{});var Oo=w(Pt);jt=E(Oo,"svelte-kit"),Oo.forEach(l),At=E(Ao," and then fetching the metadata for the post by importing that file. That worked during development but didn’t work with static adapter. Since i was importing file dynamically, it needed a server."),Ao.forEach(l),Dt=r(a),Ct=b(a,"P",{});var To=w(Ct);Ot=E(To,"Then i found out about layouts in mdsvex. All i had to do was add a svelte component somewhere, say lib folder, and then point mdsvex to that file. That is done in "),Tt=b(To,"CODE",{});var Io=w(Tt);It=E(Io,"mdsvex.config.cjs"),Io.forEach(l),To.forEach(l),Ht=r(a),_t=b(a,"PRE",{class:!0}),w(_t).forEach(l),$t=r(a),Mt=b(a,"P",{});var Ho=w(Mt);St=E(Ho,"And the BlogLayout.svelte component looked like this"),Ho.forEach(l),Lt=r(a),Rt=b(a,"PRE",{class:!0}),w(Rt).forEach(l),qt=r(a),Bt=b(a,"P",{});var _o=w(Bt);Wt=E(_o,"Now all my blog posts had a title and date at the top. The layout component also enabled styling the container for each post, if i wanted to."),_o.forEach(l),Yt=r(a),Nt=b(a,"P",{});var $o=w(Nt);Gt=E($o,"More about "),Ft=b($o,"CODE",{});var Mo=w(Ft);zt=E(Mo,"mdsvex"),Mo.forEach(l),Jt=E($o," layout components here - "),Kt=b($o,"A",{href:!0,rel:!0});var So=w(Kt);Qt=E(So,"https://mdsvex.pngwn.io/docs#layouts"),So.forEach(l),$o.forEach(l),Ut=r(a),Vt=b(a,"H3",{id:!0});var Lo=w(Vt);Xt=b(Lo,"A",{href:!0});var Ro=w(Xt);Zt=E(Ro,"Step 6 - Hosting the blog on github"),Ro.forEach(l),Lo.forEach(l),as=r(a),ts=b(a,"P",{});var qo=w(ts);ss=E(qo,"Github allows static site hosting in 2 ways - either as a user site or as a project site. You can read more about github hosting "),ns=b(qo,"A",{href:!0,rel:!0});var Bo=w(ns);es=E(Bo,"here"),Bo.forEach(l),os=E(qo,". I have my site hosted as a user site. Which meant i had to push the output of the static adapter to my master branch. But what is this static adapter thingy?"),qo.forEach(l),ps=r(a),ls=b(a,"P",{});var Wo=w(ls);rs=E(Wo,"svelte kit provides various adapters to convert your site in ways which are suited for your deployment environemnt. In our case, we want the site to be hosted on github (or netlify etc.) as a static site. No server. Just html pages with some css and js. For that, we use the "),cs=b(Wo,"A",{href:!0,rel:!0});var Yo=w(cs);is=E(Yo,"svelte-kit static adapter"),Yo.forEach(l),Wo.forEach(l),hs=r(a),us=b(a,"H4",{id:!0});var No=w(us);ds=b(No,"A",{href:!0});var Go=w(ds);ks=E(Go,"Install svelte static adapter"),Go.forEach(l),No.forEach(l),gs=r(a),fs=b(a,"P",{});var Fo=w(fs);ms=E(Fo,"We can install the static adapter from npm."),Fo.forEach(l),vs=r(a),ys=b(a,"PRE",{class:!0}),w(ys).forEach(l),bs=r(a),ws=b(a,"P",{});var zo=w(ws);Es=E(zo,"We then have to change the svelte config to tell it to use static adapter -"),zo.forEach(l),xs=r(a),Ps=b(a,"PRE",{class:!0}),w(Ps).forEach(l),js=r(a),As=b(a,"H4",{id:!0});var Jo=w(As);Ds=b(Jo,"A",{href:!0});var Ko=w(Ds);Cs=E(Ko,"Generate content to host as static site"),Ko.forEach(l),Jo.forEach(l),Os=r(a),Ts=b(a,"P",{});var Qo=w(Ts);Is=E(Qo,"Once we have setup the static adapter, calling "),Hs=b(Qo,"CODE",{});var Uo=w(Hs);_s=E(Uo,"npm run build"),Uo.forEach(l),$s=E(Qo," on the terminal should generate the build folder."),Qo.forEach(l),Ms=r(a),Ss=b(a,"PRE",{class:!0}),w(Ss).forEach(l),Ls=r(a),Rs=b(a,"P",{});var Vo=w(Rs);qs=E(Vo,"We can test the build by going inside the build folder and using "),Bs=b(Vo,"CODE",{});var Xo=w(Bs);Ws=E(Xo,"serve"),Xo.forEach(l),Ys=E(Vo," or any other server to serve the files. "),Ns=b(Vo,"CODE",{});var Zo=w(Ns);Gs=E(Zo,"serve"),Zo.forEach(l),Fs=E(Vo," starts a server on "),zs=b(Vo,"CODE",{});var ap=w(zs);Js=E(ap,"localhost:5000"),ap.forEach(l),Ks=E(Vo," by default."),Vo.forEach(l),Qs=r(a),Us=b(a,"H4",{id:!0});var tp=w(Us);Vs=b(tp,"A",{href:!0});var sp=w(Vs);Xs=E(sp,"Install gh-pages and deploy site"),sp.forEach(l),tp.forEach(l),Zs=r(a),an=b(a,"P",{});var np=w(an);tn=E(np,"Now that we have the built files, we have to push them to the master branch, for user site, or to the "),sn=b(np,"CODE",{});var ep=w(sn);nn=E(ep,"gh-pages"),ep.forEach(l),en=E(np," branch for a project site. Once we update the branch and push to github, github will then deploy the files for us and we should be able to see our site come alive."),np.forEach(l),on=r(a),pn=b(a,"P",{});var op=w(pn);ln=b(op,"CODE",{});var pp=w(ln);rn=E(pp,"gh-pages"),pp.forEach(l),cn=E(op," is a handy tool to push the contents of any folder to any other branch in your repository. Installing "),hn=b(op,"CODE",{});var lp=w(hn);un=E(lp,"gh-pages"),lp.forEach(l),dn=E(op," is straight forward with npm."),op.forEach(l),kn=r(a),gn=b(a,"PRE",{class:!0}),w(gn).forEach(l),fn=r(a),mn=b(a,"P",{});var rp=w(mn);vn=E(rp,"I then added an npm script to make deployment easy -"),rp.forEach(l),yn=r(a),bn=b(a,"PRE",{class:!0}),w(bn).forEach(l),wn=r(a),En=b(a,"P",{});var cp=w(En);xn=E(cp,"If you are deploying a project site, you can remove the "),Pn=b(cp,"CODE",{});var ip=w(Pn);jn=E(ip,"-b master"),ip.forEach(l),An=E(cp," flag from gh-pages command. "),Dn=b(cp,"CODE",{});var hp=w(Dn);Cn=E(hp,"gh-pages"),hp.forEach(l),On=E(cp," pushes to "),Tn=b(cp,"CODE",{});var up=w(Tn);In=E(up,"gh-pages"),up.forEach(l),Hn=E(cp," branch by default."),cp.forEach(l),_n=r(a),$n=b(a,"P",{});var dp=w($n);Mn=b(dp,"CODE",{});var kp=w(Mn);Sn=E(kp,"gh-pages"),kp.forEach(l),Ln=E(dp," will also push the branch to remote. So if all goes well, you should be able to see your site live after some time."),dp.forEach(l),Rn=r(a),qn=b(a,"H4",{id:!0});var gp=w(qn);Bn=b(gp,"A",{href:!0});var fp=w(Bn);Wn=E(fp,"Fixing _apps/"),Yn=b(fp,"EM",{});var mp=w(Yn);Nn=E(mp,".js and _apps/"),mp.forEach(l),Gn=E(fp,".css paths returning 404 on the deployed site"),fp.forEach(l),gp.forEach(l),Fn=r(a),zn=b(a,"P",{});var vp=w(zn);Jn=E(vp,"After you deploy your site by pushing the github branch, you will probably see your site looking a little different to what it looks on your development environment. That’s because some of the js and css is missing. If you open the devtools and then the network tab, a number of js and css files might be returning 404. All of those would be serving files from inside the "),Kn=b(vp,"CODE",{});var yp=w(Kn);Qn=E(yp,"__app"),yp.forEach(l),Un=E(vp," folder. That is because github does not deploy the "),Vn=b(vp,"CODE",{});var bp=w(Vn);Xn=E(bp,"__app"),bp.forEach(l),Zn=E(vp," folder. All folders starting with an "),ae=b(vp,"CODE",{});var wp=w(ae);te=E(wp,"_"),wp.forEach(l),se=E(vp," are to be ignored for sites built with "),ne=b(vp,"A",{href:!0,rel:!0});var Ep=w(ne);ee=E(Ep,"jekyll"),Ep.forEach(l),oe=E(vp,". Read more about it "),pe=b(vp,"A",{href:!0,rel:!0});var xp=w(pe);le=E(xp,"here"),xp.forEach(l),re=E(vp,"."),vp.forEach(l),ce=r(a),ie=b(a,"P",{});var Pp=w(ie);he=E(Pp,"To get around the problem, we have to add an empty file named "),ue=b(Pp,"CODE",{});var jp=w(ue);de=E(jp,".nojekyll"),jp.forEach(l),ke=E(Pp," to our static folder. "),ge=b(Pp,"CODE",{});var Ap=w(ge);fe=E(Ap,"npm run build"),Ap.forEach(l),me=E(Pp," will then copy that file to the "),ve=b(Pp,"CODE",{});var Dp=w(ve);ye=E(Dp,"build"),Dp.forEach(l),be=E(Pp," folder and "),we=b(Pp,"CODE",{});var Cp=w(we);Ee=E(Cp,"gh-pages"),Cp.forEach(l),xe=E(Pp," will then push that file to the required github branch."),Pp.forEach(l),Pe=r(a),je=b(a,"P",{});var Op=w(je);Ae=E(Op,"You might find that it still doesn’t work. Mainly because "),De=b(Op,"CODE",{});var Tp=w(De);Ce=E(Tp,"gh-pages"),Tp.forEach(l),Oe=E(Op," is not pushing the "),Te=b(Op,"CODE",{});var Ip=w(Te);Ie=E(Ip,".nojekyll"),Ip.forEach(l),He=E(Op," file to the github branch, because "),_e=b(Op,"CODE",{});var Hp=w(_e);$e=E(Hp,"gh-pages"),Hp.forEach(l),Me=E(Op," tool ignores all files starting with a "),Se=b(Op,"CODE",{});var _p=w(Se);Le=E(_p,"."),_p.forEach(l),Re=E(Op," (dot). We can tell the "),qe=b(Op,"CODE",{});var $p=w(qe);Be=E($p,"gh-pages"),$p.forEach(l),We=E(Op," tool to also push dot files from the build folder by using the "),Ye=b(Op,"CODE",{});var Mp=w(Ye);Ne=E(Mp,"-t"),Mp.forEach(l),Ge=E(Op," flag. If you copied the deploy command from above, it’s already there."),Op.forEach(l),Fe=r(a),ze=b(a,"P",{});var Sp=w(ze);Je=E(Sp,"That is it! Go ahead and add a lot of blog posts as markdown files and deploy to your site. I am kidding. Building the blog with svelte kit was fun though."),Sp.forEach(l),Ke=r(a),Qe=b(a,"P",{});var Lp=w(Qe);Ue=E(Lp,"Link to final code - "),Ve=b(Lp,"A",{href:!0,rel:!0});var Rp=w(Ve);Xe=E(Rp,"https://github.com/mukeshsoni/mukeshsoni.github.io/tree/svelte"),Rp.forEach(l),Lp.forEach(l),this.h()},h(){x(D,"href","https://github.com/mukeshsoni/mukeshsoni.github.io/tree/svelte"),x(D,"rel","nofollow"),x(H,"href","#step-1---setup-svelte-kit-template"),x(I,"id","step-1---setup-svelte-kit-template"),x(W,"class","language-undefined"),x(G,"href","#step-2---add-mdsvex-to-convert-markdown-files-to-html"),x(N,"id","step-2---add-mdsvex-to-convert-markdown-files-to-html"),x(J,"class","language-undefined"),x(da,"href","#step-3---show-a-list-of-all-blog-posts-on-home-page"),x(ua,"id","step-3---show-a-list-of-all-blog-posts-on-home-page"),x(Ca,"class","language-javascript"),x(_a,"class","language-undefined"),x(Ra,"class","language-undefined"),x(Na,"class","language-html"),x(za,"href","#step-4---add-a-layout-component-for-the-blog"),x(Fa,"id","step-4---add-a-layout-component-for-the-blog"),x(st,"class","language-html"),x(pt,"href","https://kit.svelte.dev/docs#layouts"),x(pt,"rel","nofollow"),x(it,"href","#step-5---add-a-layout-component-for-individual-blog-posts"),x(ct,"id","step-5---add-a-layout-component-for-individual-blog-posts"),x(_t,"class","language-javascript"),x(Rt,"class","language-javascript"),x(Kt,"href","https://mdsvex.pngwn.io/docs#layouts"),x(Kt,"rel","nofollow"),x(Xt,"href","#step-6---hosting-the-blog-on-github"),x(Vt,"id","step-6---hosting-the-blog-on-github"),x(ns,"href","https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages"),x(ns,"rel","nofollow"),x(cs,"href","https://github.com/sveltejs/kit/tree/master/packages/adapter-static"),x(cs,"rel","nofollow"),x(ds,"href","#install-svelte-static-adapter"),x(us,"id","install-svelte-static-adapter"),x(ys,"class","language-bash"),x(Ps,"class","language-javascript"),x(Ds,"href","#generate-content-to-host-as-static-site"),x(As,"id","generate-content-to-host-as-static-site"),x(Ss,"class","language-undefined"),x(Vs,"href","#install-gh-pages-and-deploy-site"),x(Us,"id","install-gh-pages-and-deploy-site"),x(gn,"class","language-undefined"),x(bn,"class","language-json"),x(Bn,"href","#fixing-_appsjs-and-_appscss-paths-returning-404-on-the-deployed-site"),x(qn,"id","fixing-_appsjs-and-_appscss-paths-returning-404-on-the-deployed-site"),x(ne,"href","https://jekyllrb.com/docs/"),x(ne,"rel","nofollow"),x(pe,"href","https://github.blog/2009-12-29-bypassing-jekyll-on-github-pages/"),x(pe,"rel","nofollow"),x(Ve,"href","https://github.com/mukeshsoni/mukeshsoni.github.io/tree/svelte"),x(Ve,"rel","nofollow")},m(a,e){i(a,t,e),P(t,s),i(a,n,e),i(a,o,e),P(o,p),i(a,c,e),i(a,h,e),P(h,u),i(a,g,e),i(a,f,e),P(f,A),P(f,D),P(D,C),P(f,O),i(a,T,e),i(a,I,e),P(I,H),P(H,_),i(a,$,e),i(a,M,e),P(M,S),P(M,L),P(L,R),P(M,q),i(a,B,e),i(a,W,e),W.innerHTML='<code class="language-undefined">npm init svelte@next &lt;project_name&gt;\ncd &lt;project_name&gt;\nnpm install\nnpm run dev -- --open</code>',i(a,Y,e),i(a,N,e),P(N,G),P(G,F),i(a,z,e),i(a,J,e),J.innerHTML='<code class="language-undefined">npx svelte-add mdsvex</code>',i(a,K,e),i(a,Q,e),P(Q,U),P(U,V),P(Q,X),P(Q,Z),P(Z,aa),P(Q,ta),P(Q,sa),P(sa,na),P(Q,ea),i(a,oa,e),i(a,pa,e),P(pa,la),i(a,ra,e),i(a,ca,e),P(ca,ia),i(a,ha,e),i(a,ua,e),P(ua,da),P(da,ka),i(a,ga,e),i(a,fa,e),P(fa,ma),i(a,va,e),i(a,ya,e),P(ya,ba),P(ya,wa),P(wa,Ea),P(ya,xa),P(ya,Pa),P(Pa,ja),P(ya,Aa),i(a,Da,e),i(a,Ca,e),Ca.innerHTML='<code class="language-javascript"><span class="token operator">&lt;</span>script context<span class="token operator">=</span><span class="token string">"module"</span> lang<span class="token operator">=</span><span class="token string">"ts"</span><span class="token operator">></span>\n\t<span class="token keyword">const</span> posts <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">\'./blog/*.md\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">let</span> body <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\t<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> path <span class="token keyword">in</span> posts<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n\t\tbody<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>posts<span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token operator">=></span> post<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token keyword">function</span> <span class="token function">dateSort</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\t<span class="token comment">/**\n\t * @type &#123;import(\'@sveltejs/kit\').Load&#125;\n\t */</span>\n\t<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> page<span class="token punctuation">,</span> fetch <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">const</span> posts <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tposts<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>dateSort<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n\t\t\tprops<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n\t\t\t\tposts\n\t\t\t<span class="token punctuation">&#125;</span>\n\t\t<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>script<span class="token operator">></span>\n\t<span class="token keyword">import</span> Bio <span class="token keyword">from</span> <span class="token string">\'$lib/Bio.svelte\'</span><span class="token punctuation">;</span>\n\t<span class="token keyword">export</span> <span class="token keyword">let</span> posts<span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code>',i(a,Oa,e),i(a,Ta,e),P(Ta,Ia),i(a,Ha,e),i(a,_a,e),_a.innerHTML='<code class="language-undefined">---\ntitle: Make a blog with svelte kit and host on github\ndate: &#39;2021-05-18&#39;\nslug: &#39;2021-05-81-make-blog-with-sveltekit&#39;\n---</code>',i(a,$a,e),i(a,Ma,e),P(Ma,Sa),i(a,La,e),i(a,Ra,e),Ra.innerHTML='<code class="language-undefined">&#123;\n\ttitle: Make a blog with svelte kit and host on github,\n\tdate: &#39;2021-05-18&#39;,\n\tslug: &#39;2021-05-81-make-blog-with-sveltekit&#39;,\n&#125;</code>',i(a,qa,e),i(a,Ba,e),P(Ba,Wa),i(a,Ya,e),i(a,Na,e),Na.innerHTML='<code class="language-html">&#123;#each posts as post&#125;\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prefetch<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blog/&#123;post.metadata.slug&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>\n\t\t\t\t&#123;post.metadata.title&#125;\n\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n&#123;/each&#125;</code>',i(a,Ga,e),i(a,Fa,e),P(Fa,za),P(za,Ja),i(a,Ka,e),i(a,Qa,e),P(Qa,Ua),P(Qa,Va),P(Va,Xa),P(Qa,Za),to&&to.m(Qa,null),P(Qa,at),i(a,tt,e),i(a,st,e),st.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">max-width</span><span class="token punctuation">:</span> 42rem<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>auto</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">\'</span>logo logo-big<span class="token punctuation">\'</span></span><span class="token punctuation">></span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header-link<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> unstack.in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span></code>',i(a,nt,e),i(a,et,e),P(et,ot),P(et,pt),P(pt,lt),i(a,rt,e),i(a,ct,e),P(ct,it),P(it,ht),i(a,ut,e),i(a,dt,e),P(dt,kt),i(a,gt,e),i(a,ft,e),P(ft,mt),P(ft,vt),P(vt,yt),P(ft,bt),P(ft,wt),P(wt,Et),P(ft,xt),P(ft,Pt),P(Pt,jt),P(ft,At),i(a,Dt,e),i(a,Ct,e),P(Ct,Ot),P(Ct,Tt),P(Tt,It),i(a,Ht,e),i(a,_t,e),_t.innerHTML='<code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n\tlayout<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n\t\tblog<span class="token operator">:</span> <span class="token string">\'./src/lib/BlogLayout.svelte\'</span>\n\t<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n\t<span class="token comment">// rest of the mdsvex config file</span>\n<span class="token punctuation">&#125;</span></code>',i(a,$t,e),i(a,Mt,e),P(Mt,St),i(a,Lt,e),i(a,Rt,e),Rt.innerHTML='<code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>\n\t<span class="token keyword">import</span> PostHeader <span class="token keyword">from</span> <span class="token string">\'$lib/PostHeader.svelte\'</span><span class="token punctuation">;</span>\n\t<span class="token comment">// if i don\'t add the exports here, i can\'t access title and date as props</span>\n\t<span class="token keyword">export</span> <span class="token keyword">let</span> title<span class="token punctuation">;</span>\n\t<span class="token keyword">export</span> <span class="token keyword">let</span> date<span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"post"</span><span class="token operator">></span>\n\t<span class="token operator">&lt;</span>PostHeader <span class="token punctuation">&#123;</span>title<span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span>date<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>\n\t<span class="token operator">&lt;</span>slot <span class="token operator">/</span><span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></code>',i(a,qt,e),i(a,Bt,e),P(Bt,Wt),i(a,Yt,e),i(a,Nt,e),P(Nt,Gt),P(Nt,Ft),P(Ft,zt),P(Nt,Jt),P(Nt,Kt),P(Kt,Qt),i(a,Ut,e),i(a,Vt,e),P(Vt,Xt),P(Xt,Zt),i(a,as,e),i(a,ts,e),P(ts,ss),P(ts,ns),P(ns,es),P(ts,os),i(a,ps,e),i(a,ls,e),P(ls,rs),P(ls,cs),P(cs,is),i(a,hs,e),i(a,us,e),P(us,ds),P(ds,ks),i(a,gs,e),i(a,fs,e),P(fs,ms),i(a,vs,e),i(a,ys,e),ys.innerHTML='<code class="language-bash"><span class="token function">npm</span> i -D @sveltejs/adapter-static@next</code>',i(a,bs,e),i(a,ws,e),P(ws,Es),i(a,xs,e),i(a,Ps,e),Ps.innerHTML='<code class="language-javascript"><span class="token keyword">import</span> staticAdapter <span class="token keyword">from</span> <span class="token string">\'@sveltejs/adapter-static\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">/** @type &#123;import(\'@sveltejs/kit\').Config&#125; */</span>\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n\textensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.svelte\'</span><span class="token punctuation">,</span> <span class="token operator">...</span>mdsvexConfig<span class="token punctuation">.</span>extensions<span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t<span class="token comment">// Consult https://github.com/sveltejs/svelte-preprocess</span>\n\t<span class="token comment">// for more information about preprocessors</span>\n\tpreprocess<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">mdsvex</span><span class="token punctuation">(</span>mdsvexConfig<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">preprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n\tkit<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n\t\tadapter<span class="token operator">:</span> <span class="token function">staticAdapter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>\n\t\t\t<span class="token comment">// default options are shown</span>\n\t\t\tpages<span class="token operator">:</span> <span class="token string">\'build\'</span><span class="token punctuation">,</span>\n\t\t\tassets<span class="token operator">:</span> <span class="token string">\'build\'</span><span class="token punctuation">,</span>\n\t\t\tfallback<span class="token operator">:</span> <span class="token keyword">null</span>\n\t\t<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\t<span class="token comment">// hydrate the &lt;div id="svelte"> element in src/app.html</span>\n\t\ttarget<span class="token operator">:</span> <span class="token string">\'#svelte\'</span>\n\t<span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>',i(a,js,e),i(a,As,e),P(As,Ds),P(Ds,Cs),i(a,Os,e),i(a,Ts,e),P(Ts,Is),P(Ts,Hs),P(Hs,_s),P(Ts,$s),i(a,Ms,e),i(a,Ss,e),Ss.innerHTML='<code class="language-undefined">npm run build\ncd build\nnpx serve</code>',i(a,Ls,e),i(a,Rs,e),P(Rs,qs),P(Rs,Bs),P(Bs,Ws),P(Rs,Ys),P(Rs,Ns),P(Ns,Gs),P(Rs,Fs),P(Rs,zs),P(zs,Js),P(Rs,Ks),i(a,Qs,e),i(a,Us,e),P(Us,Vs),P(Vs,Xs),i(a,Zs,e),i(a,an,e),P(an,tn),P(an,sn),P(sn,nn),P(an,en),i(a,on,e),i(a,pn,e),P(pn,ln),P(ln,rn),P(pn,cn),P(pn,hn),P(hn,un),P(pn,dn),i(a,kn,e),i(a,gn,e),gn.innerHTML='<code class="language-undefined">npm install -D gh-pages</code>',i(a,fn,e),i(a,mn,e),P(mn,vn),i(a,yn,e),i(a,bn,e),bn.innerHTML='<code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n\t<span class="token property">"deploy"</span><span class="token operator">:</span> <span class="token string">"npm run build &amp;&amp; gh-pages -b master -d build -t"</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n</code>',i(a,wn,e),i(a,En,e),P(En,xn),P(En,Pn),P(Pn,jn),P(En,An),P(En,Dn),P(Dn,Cn),P(En,On),P(En,Tn),P(Tn,In),P(En,Hn),i(a,_n,e),i(a,$n,e),P($n,Mn),P(Mn,Sn),P($n,Ln),i(a,Rn,e),i(a,qn,e),P(qn,Bn),P(Bn,Wn),P(Bn,Yn),P(Yn,Nn),P(Bn,Gn),i(a,Fn,e),i(a,zn,e),P(zn,Jn),P(zn,Kn),P(Kn,Qn),P(zn,Un),P(zn,Vn),P(Vn,Xn),P(zn,Zn),P(zn,ae),P(ae,te),P(zn,se),P(zn,ne),P(ne,ee),P(zn,oe),P(zn,pe),P(pe,le),P(zn,re),i(a,ce,e),i(a,ie,e),P(ie,he),P(ie,ue),P(ue,de),P(ie,ke),P(ie,ge),P(ge,fe),P(ie,me),P(ie,ve),P(ve,ye),P(ie,be),P(ie,we),P(we,Ee),P(ie,xe),i(a,Pe,e),i(a,je,e),P(je,Ae),P(je,De),P(De,Ce),P(je,Oe),P(je,Te),P(Te,Ie),P(je,He),P(je,_e),P(_e,$e),P(je,Me),P(je,Se),P(Se,Le),P(je,Re),P(je,qe),P(qe,Be),P(je,We),P(je,Ye),P(Ye,Ne),P(je,Ge),i(a,Fe,e),i(a,ze,e),P(ze,Je),i(a,Ke,e),i(a,Qe,e),P(Qe,Ue),P(Qe,Ve),P(Ve,Xe),Ze=!0},p(a,t){to&&to.p&&(!Ze||2&t)&&j(to,ao,a,a[1],t,null,null)},i(a){Ze||(d(to,a),Ze=!0)},o(a){k(to,a),Ze=!1},d(a){a&&l(t),a&&l(n),a&&l(o),a&&l(c),a&&l(h),a&&l(g),a&&l(f),a&&l(T),a&&l(I),a&&l($),a&&l(M),a&&l(B),a&&l(W),a&&l(Y),a&&l(N),a&&l(z),a&&l(J),a&&l(K),a&&l(Q),a&&l(oa),a&&l(pa),a&&l(ra),a&&l(ca),a&&l(ha),a&&l(ua),a&&l(ga),a&&l(fa),a&&l(va),a&&l(ya),a&&l(Da),a&&l(Ca),a&&l(Oa),a&&l(Ta),a&&l(Ha),a&&l(_a),a&&l($a),a&&l(Ma),a&&l(La),a&&l(Ra),a&&l(qa),a&&l(Ba),a&&l(Ya),a&&l(Na),a&&l(Ga),a&&l(Fa),a&&l(Ka),a&&l(Qa),to&&to.d(a),a&&l(tt),a&&l(st),a&&l(nt),a&&l(et),a&&l(rt),a&&l(ct),a&&l(ut),a&&l(dt),a&&l(gt),a&&l(ft),a&&l(Dt),a&&l(Ct),a&&l(Ht),a&&l(_t),a&&l($t),a&&l(Mt),a&&l(Lt),a&&l(Rt),a&&l(qt),a&&l(Bt),a&&l(Yt),a&&l(Nt),a&&l(Ut),a&&l(Vt),a&&l(as),a&&l(ts),a&&l(ps),a&&l(ls),a&&l(hs),a&&l(us),a&&l(gs),a&&l(fs),a&&l(vs),a&&l(ys),a&&l(bs),a&&l(ws),a&&l(xs),a&&l(Ps),a&&l(js),a&&l(As),a&&l(Os),a&&l(Ts),a&&l(Ms),a&&l(Ss),a&&l(Ls),a&&l(Rs),a&&l(Qs),a&&l(Us),a&&l(Zs),a&&l(an),a&&l(on),a&&l(pn),a&&l(kn),a&&l(gn),a&&l(fn),a&&l(mn),a&&l(yn),a&&l(bn),a&&l(wn),a&&l(En),a&&l(_n),a&&l($n),a&&l(Rn),a&&l(qn),a&&l(Fn),a&&l(zn),a&&l(ce),a&&l(ie),a&&l(Pe),a&&l(je),a&&l(Fe),a&&l(ze),a&&l(Ke),a&&l(Qe)}}}function C(a){let t,s,m;const v=[O];let y={$$slots:{default:[D]},$$scope:{ctx:a}};for(let e=0;e<v.length;e+=1)y=n(y,v[e]);return s=new A({props:y}),{c(){t=e(),o(s.$$.fragment),this.h()},l(a){p('[data-svelte="svelte-g5bw5m"]',document.head).forEach(l),t=r(a),c(s.$$.fragment,a),this.h()},h(){document.title="Make a blog with svelte kit and host on github"},m(a,n){i(a,t,n),h(s,a,n),m=!0},p(a,[t]){const n=0&t?u(v,[f(O)]):{};2&t&&(n.$$scope={dirty:t,ctx:a}),s.$set(n)},i(a){m||(d(s.$$.fragment,a),m=!0)},o(a){k(s.$$.fragment,a),m=!1},d(a){a&&l(t),g(s,a)}}}const O={title:"Make a blog with svelte kit and host on github",date:"2021-05-18",slug:"2021-05-81-make-blog-with-sveltekit"};function T(a,t,s){let{$$slots:n={},$$scope:e}=t;return a.$$set=a=>{"$$scope"in a&&s(1,e=a.$$scope)},[n,e]}export default class extends a{constructor(a){super(),t(this,a,T,C,s,{})}}export{O as metadata};
