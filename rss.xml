<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[unstack.in]]></title><description><![CDATA[Mostly just so that i have an independent presence on the interwebs]]></description><link>https://unstack.in</link><generator>RSS for Node</generator><lastBuildDate>Wed, 09 May 2018 12:22:58 GMT</lastBuildDate><item><title><![CDATA[Resume]]></title><description><![CDATA[I am good at JavaScript, reactjs and family. I know and have worked in nodejs. Been doing web development for 7 years (since 2011) and loved…]]></description><link>https://unstack.in/resume/</link><guid isPermaLink="false">https://unstack.in/resume/</guid><content:encoded>&lt;blockquote&gt;
&lt;p&gt;I am good at JavaScript, reactjs and family. I know and have worked in nodejs. Been doing web development for 7 years (since 2011) and loved every part of it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I transitioned into web development from a business analyst role 7 years back and have never looked back.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I like the ideas behind functional programming and try to use them as much as possible in my own code. Immutability rules.&lt;/p&gt;
&lt;p&gt;I also love looking into ways to make a developers life easier and try building tools to improve developer productivity. This i do in my free time.&lt;/p&gt;
&lt;p&gt;Currently use reactjs and redux for writing complex frontend applications. Have decent knowledge about CSS, Haskell and elm too.&lt;/p&gt;
&lt;p&gt;Have been getting into &lt;code class=&quot;language-text&quot;&gt;react-native&lt;/code&gt; of late and loving it. &lt;code class=&quot;language-text&quot;&gt;react-native&lt;/code&gt; might be the future of mobile development.&lt;/p&gt;
&lt;p&gt;Know a little bit of purescript, haskell and elm. You can ask me about functors 😜.&lt;/p&gt;
&lt;p&gt;I sometimes code in my free time too and host my personal work on github - &lt;a href=&quot;https://github.com/mukeshsoni&quot;&gt;https://github.com/mukeshsoni&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Skills&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Languages&lt;/strong&gt; - JavaScript, html, css. Little bit of purescript, elm and Haskell&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Databases&lt;/strong&gt; - MySQL, MongoDB, redis&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Frameworks/Libraries&lt;/strong&gt; - reactjs, react native, redux and family, backbonejs, expressjs&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Testing&lt;/strong&gt; - BDD, jest, mocha, enzyme, property based testing
Build tools - webpack, systemjs, browserify, gulp, grunt&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Misc&lt;/strong&gt; (don’t know how to categorize these) - nodejs, jquery, css&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Excited About&lt;/strong&gt; (things i am trying to learn/understand) - purescript, Elm, React Native, Haskell, grahpql, relay, immutablejs&lt;/p&gt;
&lt;h2&gt;Companies worked in&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&apos;https://projectplace.com&apos; target=&apos;_blank&apos;&gt;Projectplace&lt;/a&gt; - June 2014 till date&lt;/li&gt;
&lt;li&gt;&lt;a href=&apos;http://brizztv.com&apos; target=&apos;_blank&apos;&gt;BrizzTV&lt;/a&gt; - December 2011 to Oct 2013&lt;/li&gt;
&lt;li&gt;Freelancing - Nov 2013 to Feb 2014&lt;/li&gt;
&lt;li&gt;&lt;a href=&apos;https://www.infosys.com&apos; target=&apos;_blank&apos;&gt;Infosys&lt;/a&gt; - July 2006 to Oct 2011&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Past work&lt;/h2&gt;
&lt;p&gt;At projectplace (June 2014 - Mar 2018), played a key role in getting the company to move from backbone views to Reactjs to be used for the view part. Have developed a number of reactjs components of various complexities over the past 4 years. Also responsible for maintainance of frontend code of part of the site.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Convinced the company to adopt reactjs in 2014 when reactjs was quite young. Did multiple prototypes and gave multiple presentations showcasing the developer productivity boost reactjs brought in.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rewrote the frontend for the commenting system used on projectplace.com from scratch. The commenting system is now used on every tool on the site. It’s also used by the more general conversation tool on the site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rewrote the frontend for documents management system on projectplace.com from scratch, along with a colleague.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wrote the frontend for a new tool, called roadmap, (along with a colleague) on projectplace.com. The tool is supposed to be used by Product owners or higher up in the management to setup the roadmap for products or services or product lines altogether.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Moved the build system for our frontend code from gulp based tasks to webpack. We had multiple codebases for legacy system and a new system running parallely, which made the transition very challenging.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Brought in a number of functional programming ideas into the frontend community at projectplace. In my own journey to learn functional programming, i learnt haskell and dipped my toes into learning purescript and elm. In my personal projects, i try and use static typing and functional paradigms as much as possible (need based, of course).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;As a freelancer, i did a project for TP Vision from Nov 2013 - Feb 2014.&lt;/p&gt;
&lt;p&gt;Built an authentication/reporting server for android based smart TVs (by TPVision). The smart tvs in question would be able to enjoy other services in the tv only after authenticating with a central server. This server is designed to handle upto 10-20 million television authentications in a day. The authentication is digest based and sends across a 11kb payload as response.&lt;/p&gt;
&lt;p&gt;The server handles 600 requests per second running on a 4 core i7 machine with 2 gb RAM.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;In BrizzTV (Dec 2011 - Oct 2013), i was simultaneously working on more than one project most of the time. Some of the noteworthy ones are mentioned below -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.brizztv.mcube&quot;&gt;MCUBE android app&lt;/a&gt; - An app which recognizes expenses by reading incoming sms. Pulls the amount from the expense, auto categorizes it based on sms text and past mappings and files it under the corrent account number. Takes the biggest pain, i.e. opening an app and filing an expense, out of the equation. The auto categorization keeps getting better with each incoming sms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Made a backend systems which pulls tweets from specific handles, hashtags, search strings from twitter (using twitter api), stores them in our system and pushes them to television channels (real time tweets on tv).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also made the front end for specifying rules by which a tweet is connected to a particular channel as well as the front end to manage the handles, hash tags and search strings for pulling the tweets.&lt;/p&gt;
&lt;p&gt;You can see the product live on airtel DTH on many channels.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ad overlay for youtube videos
I made a popcorn maker like UI but only for adding ads to youtube videos. User could tag photo(s) or text to particular part of the scene and specify the duration for which the ad was to be shown. It’s like a video tagger but for youtube only.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Made a corresponding chrome extension which allows a user to view relevant ad overlays on youtube videos. The idea was to show ads relevant to what someone is wearing/holding in that particular scene.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made an intuitive ad inventory management and scheduling system (both UI and backend) for ad publishers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The ad inventory was for showing ads on custom movie channels. The idea is to show free movies on television but with permanent ads on the side and bottom. To enjoy ad free movie, subscription is required.&lt;/p&gt;
&lt;p&gt;I made the system to maintain the ads, their publisher details, scheduling details and a system to automatically push ads to the proper tv channel at the right time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I made the interface and backend to push content directly from browser to any tv channel (assuming you have credentials for the channel server). The push system is realtime (about 5 seconds delay).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;I was a business analyst for multiple multi million dollar project while i was working in Infosys.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My last project was a 2 year long project for building an application for Apple to manage and automate the process of setting prices for products (across geographies and org structure) before the product launch. The system helped Apple manage and collaborate the process on fixing prices at a very low level (MPN level).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I spent one year as part of a Data Quality solutions team, where I was associated with solution designing, development, and business consulting as data expert for several Fortune 500 organizations. I also wrote data cleansing scripts which gave me immense joy. The product we worked on is called &lt;a href=&quot;http://support.sas.com/software/products/dataflux/&quot;&gt;DataFlux&lt;/a&gt; (now taken over by SAS).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Education&lt;/h2&gt;
&lt;p&gt;Bachelor of Engineering, Computer Science, NITK Surathkal (2004)&lt;/p&gt;
&lt;h2&gt;Contact Details&lt;/h2&gt;
&lt;p&gt;Email: mukeshsoni [at] gmail [dot] com&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mukeshsoni&quot; title=&quot;Some stuff on github&quot;&gt;Github&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/mukeshsoni&quot; title=&quot;Find me on twitter!&quot;&gt;Twitter&lt;/a&gt;
&lt;a href=&quot;http://www.linkedin.com/profile/view?id=12151475&quot; title=&quot;LinkedIn too, sigh :(&quot;&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Getting started with phonegap on OSX]]></title><description><![CDATA[Install phonegap using npm Check if phonegap is install properly Want a quick overview of what you can do with phonegap command line tool…]]></description><link>https://unstack.in/2015-01-25-getting-started-with-phonegap-on-osx/</link><guid isPermaLink="false">https://unstack.in/2015-01-25-getting-started-with-phonegap-on-osx/</guid><pubDate>Mon, 05 Jan 2015 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Install phonegap using npm&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;npm install -g phonegap&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Check if phonegap is install properly&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;phonegap -v&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Want a quick overview of what you can do with phonegap command line tool?&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;phonegap -h&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Now lets create a new phonegap project. The phonegap command itself takes subcommands to do stuff. To create a new project we use&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;phonegap create &amp;lt;folder&amp;gt; -n &amp;lt;appname&amp;gt; -i &amp;lt;packagename&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;To see the options available while creating a new project, simply ask for help&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;phonegap create help&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This is true for getting help on any of the sub commands. Let’s create a new project -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;phonegap create awesome_app -n AwesomeApp -i com.example.awesomeapp&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The folder awesome_app should be empty.&lt;/p&gt;
&lt;p&gt;Now it’s time to see our newly created app in action. Let’s move to the directory and build the app for the required platform (android, iphone etc)&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;cd awesome_app
phonegap build android
phonegap install android&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Phonegap has a single sub command which combines the last two sub commands (build and install) -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;phonegap run android&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;_I am assuming here that you have android sdks installed in your system and have correctly setup the paths.
_&lt;/p&gt;
&lt;p&gt;Now you should have see the default phonegap application on the android simulator. You can connect an android phone and run the application on the device using this command -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;phonegap run android --device&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Make sure that you have enabled the ‘USB Debugging’ mode in your phone developer settings. Google it you don’t know what i mean.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How did it work?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When we did &lt;code class=&quot;language-text&quot;&gt;phonegap build android&lt;/code&gt;, phonegap took whatever was in the www directory and packaged that along with the required phonegap.js (or cordova.js) file and made an apk out of it. &lt;code class=&quot;language-text&quot;&gt;phonegap install android&lt;/code&gt; then installs the apk on the phone. On the phone, phonegap shows throws the html+js+css content into a webview which knows how to render it. So all you have to do know how to write html, javascript and css and you are good to go.&lt;/p&gt;
&lt;p&gt;Android simulator is very very very slow. So it’s a better idea to run the app on a device. Even better idea is to use phonegap app. Go to &lt;a href=&quot;http://app.phonegap.com&quot;&gt;app.phonegap.com&lt;/a&gt; on instructions on how to install the app on your phone. All you need to do is run &lt;code class=&quot;language-text&quot;&gt;phonegap serve&lt;/code&gt; from the project directory. It will spawn a web server and show you the address on which it is running (something like 192.168.1.103:3000). Now install the phonegap app on your phone from the Google play store. Enter the server address from above into the app and you should see your app on the phone. Make some change to the index.html file in the www directory and save. You should see the change automatically on your phone. Pretty awesome actually. No usb connection required for this and the server keeps watching your files for changes and automatically pushes the new app. And it’s fast.&lt;/p&gt;
&lt;p&gt;Go ahead and take a look into the contents of www directory. This is where you will be working all the time. If you are a web developer you will be right at home. Make some changes to the index.html file and see your app changing.&lt;/p&gt;
&lt;p&gt;We will look into how to change the default application and make something more useful in future blog posts.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[JavaScript Unit Testing - the HOW - Part I]]></title><description><![CDATA[Testing javascript is a tricky affair. Mainly because you can’t directly run your javascript written for a browser us something like ‘js…]]></description><link>https://unstack.in/2013-07-09-javascript-unit-testing-the-how-part-I/</link><guid isPermaLink="false">https://unstack.in/2013-07-09-javascript-unit-testing-the-how-part-I/</guid><pubDate>Tue, 09 Jul 2013 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Testing javascript is a tricky affair. Mainly because you can’t directly run your javascript written for a browser us something like ‘js myjstest.js’ in the command line. Surely there are testing frameworks and task managers like grunt which finally enable you to do exactly that, but it’s a lot of plumbing to get going.
The second reason it’s tough to test javascript is because of it’s async nature. Testing asynchronous functions is kind of a pain in the ass.&lt;/p&gt;
&lt;p&gt;There are a lot of helpful libraries to tame the beast. But we will not start with any framework/library. We will start with the basics which would also allow us to better appreciate the frameworks.&lt;/p&gt;
&lt;p&gt;Lets start with writing a very simple unit test (testing isolated pieces of code) for a very simple function.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;function add(x, y) {
 return x + y;
}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;How do we test the above. We want to verify that if we call add(3, 9), the function should return 12 and so on.&lt;/p&gt;
&lt;p&gt;One way we can do this is by putting the above function in a script tag in an html file, opening that file in a browser and then calling the ‘add’ function in the console.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;function add(x, y) {
 return x + y;
}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://farm9.staticflickr.com/8643/16196564474_63b66e88a3_o.png&quot; alt=&quot;Running the test in the browser&quot;&gt;&lt;/p&gt;
&lt;p&gt;That is unit testing for you. The problem - it’s not “automated”.&lt;/p&gt;
&lt;p&gt;How can we automate it? The simplest way to do it would be to make the test calls in the same html and check their validity.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;function add(x, y) {
 return x + y;
}

// start test code
if(add(2,5) === 7) {
 console.log(&amp;amp;quot;adding 2 and 5 passed&amp;amp;quot;);
} else {
 console.log(&amp;amp;quot;adding 2 and 5 failed&amp;amp;quot;);
}

if(add(-1,3) === 2) {
 console.log(&amp;amp;quot;adding -1 and 3 passed&amp;amp;quot;);
} else {
 console.log(&amp;amp;quot;adding -1 and 3 failed&amp;amp;quot;);
}
// end test code&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;We can do one better by putting the actual code and the test code in external files and link them in our html file.&lt;/p&gt;
&lt;p&gt;But our test code is so verbose and non reusable that this might be the last time we test anything. We even have to keep track of what we put in the console.log messages (e.g. a copy paste error would result in “adding 2 and 5 passed” twice).&lt;/p&gt;
&lt;p&gt;Assertions -
All we wanted to do above was something like “i am telling you, 2+5 is equal to 7. If not, ask the function writer to repeat 2nd standard”. And this should happen is as less code as possible. Assertions allow you to do exactly that in just a single line. So you go something like -&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;assert(add(2,5)===7, &amp;amp;quot;learn your maths&amp;amp;quot;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And the assert function should throw out pass and fail messages accordingly. Let’s try writing one -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;function assert(expression, message) {
 if(!expression) {
 return console.log(message || &amp;amp;quot;Test case failed&amp;amp;quot;); //if no fail message was passed by the function caller
 }

return console.log(&amp;amp;quot;Test case passed&amp;amp;quot;);
}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Now we can drop this function whenever we want to test stuff. In our case -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;assert(add(2,5)===7, &amp;amp;quot;learn your maths&amp;amp;quot;);
assert(add(-1,3)===2, &amp;amp;quot;learn your maths&amp;amp;quot;);
assert(add(-1,-4)===-5, &amp;amp;quot;learn your maths&amp;amp;quot;);&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;We can go ahead and enhance the assert function to tell us the number of test cases which passed -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;var passedTestCount = 0;
function assert(expression, message) {
 if(!expression) {
 return console.log(message || &amp;amp;quot;Test case failed&amp;amp;quot;); //if no fail message was passed by the function caller
 }

passedTestCount++;
 return console.log(&amp;amp;quot;Test case passed&amp;amp;quot;);
}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;That is it. Not at all perfect but atleast we have a goto function for testing equality related stuff. In real world we will not print to the console in the assert function. Too much coupling there. The assert function will simply test whether the assertion is true or not. If not, raise an exception.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;function assert(expression, message) {
 if(!expression) {
 throw new Error(message || &amp;amp;quot;Test case failed&amp;amp;quot;); //if no fail message was passed by the function caller
 }

passedTestCount++;
 return true;
}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;If we want to be purist, we should also remove passedTestCount++ from assertion function. There is no reason for assertion function to deal with correct/incorrect assertion counts. But i will leave that to you.&lt;/p&gt;
&lt;p&gt;In the next article we will try to see how we can enhance our little testing framework (ok, just one function for now) to handle more complicated cases. Till then, adios!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[JavaScript Unit Testing - the WHY]]></title><description><![CDATA[When i say ‘javascript testing’ what i mean is ‘automated javascript testing’. I love writing javascript apps. But for a long time i never…]]></description><link>https://unstack.in/2013-07-08-javascript-unit-testing-the-why/</link><guid isPermaLink="false">https://unstack.in/2013-07-08-javascript-unit-testing-the-why/</guid><pubDate>Mon, 08 Jul 2013 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;When i say ‘javascript testing’ what i mean is ‘automated javascript testing’.&lt;/p&gt;
&lt;p&gt;I love writing javascript apps. But for a long time i never felt the need to write tests for my javascript code. My testing consisted of continually refreshing the browser window. Now as i went back to those apps to make enhancements or fix bugs, i started to feel really uncomfortable. Everything seemed very tedious. I couldn’t lay my finger on what the problem was for quite some time. And then it hit me - bam! I was irritated by the continuous manual testing i had to go through each time.&lt;/p&gt;
&lt;p&gt;You might think that i was a bit naive to have recognised the problem, but that’s ok. The important thing is i did realize the problem. And now i am trying to fix it.&lt;/p&gt;
&lt;p&gt;Let me list down the why’s in a list because i know that’s how you like it.&lt;/p&gt;
&lt;p&gt;If you like programming, automating anything will make you happy. I can’t stress it enough. A happy programmer is a more productive programmer. For me, this is the most important reason to write tests.
Writing tests makes you write better code. And the only way to come to terms with this fact is by trying it yourself. Write some code without test. Now redo the exercise by first writing a test first. See the difference? No? Then maybe go back to the first point.
Research shows that writing tests for your code reduces bugs. We don’t like bugs, do we? Except while taking macro photographs.
If you are working in a team, answering why to write tests is a no brainer.
Hope the above reasons convince you that writing tests is good.&lt;/p&gt;
&lt;p&gt;Good, if you are convinced we will move on to the next phase. The HOW. The how part for javascript is actually trickier than other languages. But that is for the next article to discuss.&lt;/p&gt;
&lt;p&gt;The article on &lt;a href=&quot;http://unstack.in/2013/07/09/javascript-unit-testing-the-how-part-I/&quot;&gt;Javascript Testing - the HOW (part 1)&lt;/a&gt; is up.&lt;/p&gt;
&lt;p&gt;Happy testing!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[What is nodejs?]]></title><description><![CDATA[I was confused for a long time about where to categorize nodejs. Some people called it server side language, which ofcourse is not true…]]></description><link>https://unstack.in/2013-05-28-what-is-nodejs/</link><guid isPermaLink="false">https://unstack.in/2013-05-28-what-is-nodejs/</guid><pubDate>Tue, 28 May 2013 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I was confused for a long time about where to categorize nodejs.&lt;/p&gt;
&lt;p&gt;Some people called it server side language, which ofcourse is not true.&lt;/p&gt;
&lt;p&gt;Nodejs.org defined nodejs as -&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a platform built on Chrome’s JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For me nodejs is something which gives javascript IO capabilities. ECMAscript has nothing at all defined for IO in javascript. Ryan Dahl was smart to add async IO to existing javascript, leveraged Google V8’s speed and came out with a kickass technology.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[My top 5 wishes for the future]]></title><description><![CDATA[Every now and then i am frustrated by one or the other event. Sometimes the govt. frustrates me, some times my own gadgets and at other…]]></description><link>https://unstack.in/2012-12-30-my-top-5-wishes-for-the-future/</link><guid isPermaLink="false">https://unstack.in/2012-12-30-my-top-5-wishes-for-the-future/</guid><pubDate>Sun, 30 Dec 2012 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Every now and then i am frustrated by one or the other event. Sometimes the govt. frustrates me, some times my own gadgets and at other times, any and everyone in my vicinity. Here’s my top 5 wish list for the future to reduce those frustrations -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A smartphone with a battery which can run for 3-4 days without needed a recharge. That too with wifi/edge and gps on at all times.&lt;/li&gt;
&lt;li&gt;A laptop with build quality like macbook pro but which does not get hot for a long period of time (say 2-3 hours). Infinitely cool laptops are most welcome.&lt;/li&gt;
&lt;li&gt;Contraptions which attach to my smartphone and let me conduct basic medical tests. I am tired of being looted in the day by the doctor-tester mafia. 99% of my visits to doctors are useless. If at all, they result in me taking antibiotics which were not all required in the first place.&lt;/li&gt;
&lt;li&gt;A system in place which lets me make complaints against my area MLA and promises an answer within a week. Make it a full fledged system with auditors and easy interfaces for the people to lodge a complain. Something like the courier tracking service.&lt;/li&gt;
&lt;li&gt;Better medicine for depression patients. My mom has been suffering from depression for quite some time and none of the medicines seem to work. Googling about it i have come to realise that anti-depressants work on less than 50% of the affected people, which itself is a depressing fact. Seems it has to do something with the greed of the pharmaceutical companies.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I hope that i can contribute to at least one of the above wishes. If anyone reading this post has any pointers to achieving any one of the above, do let me know. I would be more than happy to contribute time, money and sweat to bring it to fruition.&lt;/p&gt;
&lt;p&gt;P.S. - A couple of days have passed and i realize that 5 wishes are not enough for me. Always hungry for more (read - frustrated by more). So here is an extended wish list -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A good app/website to learn indian languages. I came to Bangalore one year back and have googled and googled about something decent to help me learn Kannada. Found a few resources but all of them are very basic. Someone up to the challenge?&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[Customizing Bootstrap from twitter]]></title><description><![CDATA[I have been using Bootstrap from twitter for quite some time now. I love how i can easily create beautiful looking forms and other controls…]]></description><link>https://unstack.in/2012-06-11-customizing-bootstrap-from-twitter/</link><guid isPermaLink="false">https://unstack.in/2012-06-11-customizing-bootstrap-from-twitter/</guid><pubDate>Mon, 11 Jun 2012 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I have been using Bootstrap from twitter for quite some time now. I love how i can easily create beautiful looking forms and other controls in such a quick time. But there comes a time when you get bored using the same thing again and again. You want to customize the form elements or the navigation bar or change the damn color scheme (you get the idea).&lt;/p&gt;
&lt;p&gt;Bootstrap uses Less which is not that tough to customize but not for a novice by any means. It’s here that you feel the need for more out of the box recipes made specifically for bootstrap. I will list a few sites i visit when i feel the need for tweaking bootstrap -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bootswatch - Welcome &lt;a href=&quot;https://bootswatch.com/&quot; target=&quot;_blank&quot;&gt;bootswatch.com&lt;/a&gt;. It has pre-made themes specifically for bootstrap. You can cook your own theme and preview it before you are ready to download that customized version of bootstrap for your site. I liked the site and would visit it regularly for quite some time. Go, give it a try.&lt;/li&gt;
&lt;li&gt;Bootswatchr - Another place where you can change different variables in bootstrap (like color, font size etc.) and live preview the results of your changes is &lt;a href=&quot;http://bootswatchr.com/&quot; target=&quot;_blank&quot;&gt;bootswatchr&lt;/a&gt;. Nice place to quickly view the impact of your choice and then make the final change in your own files.&lt;/li&gt;
&lt;li&gt;BuiltWithBootstrap - The last one in my list of interesting sites for inspiration material on bootstrap is &lt;a href=&quot;http://builtwithbootstrap.com/&quot; target=&quot;_blank&quot;&gt;builtwithbootstrap&lt;/a&gt;. It showcases live sites which are built with bootstrap. Again nice place to visit when you are stuck for ideas.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hope these sites are useful in your endeavor of making beautiful sites (or should i say “webapps”?).&lt;/p&gt;</content:encoded></item></channel></rss>