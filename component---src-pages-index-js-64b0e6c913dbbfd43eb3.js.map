{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","posts","get","this","map","node","title","fields","slug","key","style","marginBottom","typography","rhythm","boxShadow","to","frontmatter","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery"],"mappings":"uPAQMA,E,gLACJC,OAAA,WACE,IAAMC,EAAQC,IAAIC,KAAM,sCAExB,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,MACCF,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAQJ,IAAIG,EAAM,sBAAwBA,EAAKE,OAAOC,KAC5D,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,wBACEE,MAAO,CACLC,aAAcC,IAAWC,OAAO,OAGlC,kBAAC,IAAD,CAAMH,MAAO,CAAEI,UAAW,QAAUC,GAAIV,EAAKE,OAAOC,MACjDF,IAGL,+BAAQD,EAAKW,YAAYC,MACzB,uBAAGC,wBAAyB,CAAEC,OAAQd,EAAKe,kB,GAtBnCC,IAAMC,WAgCfvB,YAER,IAAMwB,EAAS","file":"component---src-pages-index-js-64b0e6c913dbbfd43eb3.js","sourcesContent":["import React from \"react\";\nimport Link from \"gatsby-link\";\nimport get from \"lodash/get\";\nimport Layout from \"../components/layout\";\n\nimport Bio from \"../components/Bio\";\nimport typography from \"../utils/typography\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const posts = get(this, \"props.data.allMarkdownRemark.edges\");\n\n    return (\n      <Layout>\n        <div>\n          <Bio />\n          {posts.map(({ node }) => {\n            const title = get(node, \"frontmatter.title\") || node.fields.slug;\n            return (\n              <div key={node.fields.slug}>\n                <h3\n                  style={{\n                    marginBottom: typography.rhythm(1 / 4)\n                  }}\n                >\n                  <Link style={{ boxShadow: \"none\" }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n                <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n              </div>\n            );\n          })}\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}